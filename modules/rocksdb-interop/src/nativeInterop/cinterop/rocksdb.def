package = org.rocksdb

headers = c.h

staticLibraries = libbz2.a \
                  liblz4.a \
                  librocksdb.a \
                  libsnappy.a \
                  libzstd.a
staticLibraries.osx = libz.a
staticLibraries.linux = libz.a
staticLibraries.mingw = libzlib.a

compilerOpts = \
             -lbz2 \
             -llz4 \
             -lrocksdb \
             -lsnappy \
             -lzstd
compilerOpts.osx = -lz
compilerOpts.linux = -lz
compilerOpts.mingw = -lzlib -lshlwapi -lrpcrt4

strictEnums = AccessHint

# Don't generate cinterop for the default access_hint functions,
# because they don't use the custom AccessHint enum (defined below)
excludedFunctions = \
 rocksdb_options_set_access_hint_on_compaction_start \
 rocksdb_options_get_access_hint_on_compaction_start


#language=c
---

// c.h uses an int to represent AccessHint - so manually define an enum

typedef enum {
  NONE = 0,
  NORMAL = 1,
  SEQUENTIAL = 2,
  WILL_NEED = 3
} AccessHint;

static AccessHint rocksdb_options_get_access_hint_on_compaction_start__(
  rocksdb_options_t* opt
) {
  return rocksdb_options_get_access_hint_on_compaction_start(opt);
};

static void rocksdb_options_set_access_hint_on_compaction_start__(
  rocksdb_options_t* opt,
  AccessHint access_hint
) {
  rocksdb_options_set_access_hint_on_compaction_start(opt, access_hint);
};
