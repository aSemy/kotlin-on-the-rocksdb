name: Build static libs

# Utility for building RocksDB static libraries for each platform.

on:
  pull_request:
    paths:
      - .github/workflows/build_static_libs.yml
  workflow_dispatch:
    inputs:
      vcpkgVersion:
        description: 'vcpkg version'
        required: false
        type: string
      rocksdbVersion:
        description: 'RocksDB version'
        required: false
        type: string

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:

  # use the latest version, so x64-windows-static-release is available
  VCPKG_VERSION: 9a469723aee0873241d055b1345d8e21b445071c
  #VCPKG_VERSION: 2023.01.09

  ROCKSDB_VERSION: 7.8.3

  VCPKG_DISABLE_METRICS: 1

jobs:
  export-rocksdb:

    strategy:
      matrix:
        include:
          - os: macos-latest
            triplet: x64-osx-release
            vcpkg-cmd: ./vcpkg
          - os: ubuntu-latest
            triplet: x64-linux-release
            vcpkg-cmd: ./vcpkg
          - os: ubuntu-latest
            triplet: x64-mingw-static
            vcpkg-cmd: ./vcpkg
          #- os: windows-latest
          #  triplet: x64-mingw-static
          #  vcpkg-cmd: vcpkg
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash # use bash for both windows and unix, so .sh scripts work
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
    steps:

      - name: setup variables
        run: |
          if [[ ! -z '${{ inputs.vcpkgVersion }}' ]]; then
            echo "VCPKG_VERSION=$(echo ${{ inputs.vcpkgVersion }})" >> $GITHUB_ENV
          fi
          
          if [[ ! -z '${{ inputs.rocksdbVersion }}' ]]; then
            echo "ROCKSDB_VERSION=$(echo ${{ inputs.rocksdbVersion }})" >> $GITHUB_ENV
          fi

      - name: setup linux x64-mingw-static
        if: runner.os == 'Linux' && matrix.triplet == 'x64-mingw-static'
        run: |
          sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64

      - name: setup linux
        if: runner.os == 'Linux'
        #sudo apt-get install gcc-9 g++-9
        #sudo apt-get install gcc-9.2 g++-9.2
        #sudo apt-get install g++-9.2
        #update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9.2 100
        #update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9.2 100
        #update-alternatives --set g++ /usr/bin/g++-9.2
        #update-alternatives --set gcc /usr/bin/gcc-9.2
        #update-alternatives --query gcc
        run: |
          sudo apt-get update
          
          apt list -a gcc
          apt list -a gcc-9
          apt list -a g++
          apt list -a g++-9
          
          sudo apt-get install gcc-9 g++-9

          echo "CC=gcc-9" >> $GITHUB_ENV
          echo "CXX=g++-9" >> $GITHUB_ENV

      - name: setup windows
        if: runner.os == 'Windows'
        run: |
          echo "CC=gcc-9.2" >> $GITHUB_ENV
          echo "CXX=g++-9.2" >> $GITHUB_ENV

      - name: cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            .
            ~/.cache/vcpkg/
            ~/AppData/Local/vcpkg
          key: vcpkg-${{ matrix.triplet }}-${{ env.VCPKG_VERSION }}

      - name: checkout vcpkg
        uses: actions/checkout@v3
        with:
          repository: microsoft/vcpkg
          ref: ${{ env.VCPKG_VERSION }}
          fetch-depth: 1

      - name: setup vcpkg
        run: ./bootstrap-vcpkg.sh

      - name: create vcpkg.json
        run: |
          touch vcpkg.json;
          
          cat <<EOT >> vcpkg.json
          {
            "dependencies": [
              "rocksdb",
              "zstd",
              "zlib",
              "snappy",
              "lz4",
              "bzip2"
            ],
            "overrides": [
              { "name": "rocksdb", "version": "${{ env.ROCKSDB_VERSION }}" }
            ]
          }
          EOT

      - name: prep triplet - x64-mingw-static
        if: matrix.triplet == 'x64-mingw-static'
        run: |
          echo "set(VCPKG_BUILD_TYPE release)" >> ./triplets/community/x64-mingw-static.cmake
          echo "updated triplet:"
          less -de ./triplets/community/x64-mingw-static.cmake

      - name: update vcpkg.json
        run: ${{ matrix.vcpkg-cmd }} x-update-baseline --add-initial-baseline

      - name: install libs
        run: ${{ matrix.vcpkg-cmd }} install

      - name: upload packaged libs
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb-${{ env.ROCKSDB_VERSION }}-${{ matrix.triplet }}
          #if-no-files-found: ignore
          path: |
            ./vcpkg_installed/${{ matrix.triplet }}/**
